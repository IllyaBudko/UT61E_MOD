

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 12 01:49:41 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.30
    13                           ; Generated 26/08/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F688 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0007                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0087                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  008F                     	;# 
    79  0090                     	;# 
    80  0091                     	;# 
    81  0095                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0007                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0087                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0095                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0007                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0087                     	;# 
   172  008C                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0095                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0007                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0087                     	;# 
   220  008C                     	;# 
   221  008E                     	;# 
   222  008F                     	;# 
   223  0090                     	;# 
   224  0091                     	;# 
   225  0095                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0007                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0087                     	;# 
   268  008C                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0095                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0007                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  0081                     	;# 
   314  0085                     	;# 
   315  0087                     	;# 
   316  008C                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0095                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009A                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  0005                     _PORTAbits	set	5
   336  0007                     _PORTCbits	set	7
   337  0010                     _T1CONbits	set	16
   338  0010                     _T1CON	set	16
   339  000F                     _TMR1H	set	15
   340  000E                     _TMR1L	set	14
   341  0007                     _PORTC	set	7
   342  0005                     _PORTA	set	5
   343  0019                     _CMCON0	set	25
   344  002A                     _RA2	set	42
   345  0039                     _RC1	set	57
   346  0028                     _RA0	set	40
   347  0060                     _TMR1IF	set	96
   348  0029                     _RA1	set	41
   349  0087                     _TRISC	set	135
   350  0095                     _WPUA	set	149
   351  0081                     _OPTION_REGbits	set	129
   352  0085                     _TRISA	set	133
   353  0091                     _ANSEL	set	145
   354                           
   355                           	psect	cinit
   356  000D                     start_initialization:	
   357                           ; #config settings
   358                           
   359  000D                     __initialization:
   360  000D                     end_of_initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363  000D                     __end_of__initialization:
   364  000D  0183               	clrf	3
   365  000E  118A  2810         	ljmp	_main	;jump to C main() function
   366                           
   367                           	psect	cstackCOMMON
   368  0070                     __pcstackCOMMON:
   369  0070                     ?_isr:
   370  0070                     ??_isr:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376                           
   377                           ; 1 bytes @ 0x0
   378  0070                     	ds	2
   379  0072                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x2
   382  0072                     	ds	3
   383                           
   384                           	psect	maintext
   385  0010                     __pmaintext:	
   386 ;;
   387 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   388 ;;
   389 ;; *************** function _main *****************
   390 ;; Defined at:
   391 ;;		line 49 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2
   400 ;; Tracked objects:
   401 ;;		On entry : B00/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   405 ;;      Params:         0       0       0       0
   406 ;;      Locals:         0       0       0       0
   407 ;;      Temps:          3       0       0       0
   408 ;;      Totals:         3       0       0       0
   409 ;;Total ram usage:        3 bytes
   410 ;; Hardware stack levels required when called:    1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		Startup code after reset
   415 ;; This function uses a non-reentrant model
   416 ;;
   417                           
   418                           
   419                           ;psect for function _main
   420  0010                     _main:
   421  0010                     l690:	
   422                           ;incstack = 0
   423                           ; Regs used in _main: [wreg+status,2]
   424                           
   425                           
   426                           ;main.c: 51:     ANSEL = 0x00;
   427  0010  1683               	bsf	3,5	;RP0=1, select bank1
   428  0011  1303               	bcf	3,6	;RP1=0, select bank1
   429  0012  0191               	clrf	17	;volatile
   430  0013                     l692:
   431                           
   432                           ;main.c: 52:     CMCON0 = 0x07;
   433  0013  3007               	movlw	7
   434  0014  1283               	bcf	3,5	;RP0=0, select bank0
   435  0015  1303               	bcf	3,6	;RP1=0, select bank0
   436  0016  0099               	movwf	25	;volatile
   437  0017                     l694:
   438                           
   439                           ;main.c: 55:     TRISA = 0x07;
   440  0017  3007               	movlw	7
   441  0018  1683               	bsf	3,5	;RP0=1, select bank1
   442  0019  1303               	bcf	3,6	;RP1=0, select bank1
   443  001A  0085               	movwf	5	;volatile
   444  001B                     l696:
   445                           
   446                           ;main.c: 56:     PORTA = 0x30;
   447  001B  3030               	movlw	48
   448  001C  1283               	bcf	3,5	;RP0=0, select bank0
   449  001D  1303               	bcf	3,6	;RP1=0, select bank0
   450  001E  0085               	movwf	5	;volatile
   451  001F                     l698:
   452                           
   453                           ;main.c: 57:     OPTION_REGbits.nRAPU = 0;
   454  001F  1683               	bsf	3,5	;RP0=1, select bank1
   455  0020  1303               	bcf	3,6	;RP1=0, select bank1
   456  0021  1381               	bcf	1,7	;volatile
   457  0022                     l700:
   458                           
   459                           ;main.c: 58:     WPUA = 0x07;
   460  0022  3007               	movlw	7
   461  0023  0095               	movwf	21	;volatile
   462                           
   463                           ;main.c: 61:     TRISC = 0x00;
   464  0024  0187               	clrf	7	;volatile
   465  0025                     l702:
   466                           
   467                           ;main.c: 62:     PORTC = 0x67;
   468  0025  3067               	movlw	103
   469  0026  1283               	bcf	3,5	;RP0=0, select bank0
   470  0027  1303               	bcf	3,6	;RP1=0, select bank0
   471  0028  0087               	movwf	7	;volatile
   472  0029                     l704:
   473                           
   474                           ;main.c: 65:     TMR1L = 0x00;
   475  0029  018E               	clrf	14	;volatile
   476  002A                     l706:
   477                           
   478                           ;main.c: 66:     TMR1H = 0x00;
   479  002A  018F               	clrf	15	;volatile
   480  002B                     l708:
   481                           
   482                           ;main.c: 67:     T1CON = 0x30;
   483  002B  3030               	movlw	48
   484  002C  0090               	movwf	16	;volatile
   485  002D                     l710:
   486                           
   487                           ;main.c: 77:     if(!RA1)
   488  002D  1885               	btfsc	5,1	;volatile
   489  002E  2830               	goto	u11
   490  002F  2831               	goto	u10
   491  0030                     u11:
   492  0030  2872               	goto	l728
   493  0031                     u10:
   494  0031                     l712:
   495                           
   496                           ;main.c: 78:     {;main.c: 79:         _delay((unsigned long)((100)*(4000000UL/4000.0)))
      +                          ;
   497  0031  3082               	movlw	130
   498  0032  00F3               	movwf	??_main+1
   499  0033  30DD               	movlw	221
   500  0034  00F2               	movwf	??_main
   501  0035                     u197:
   502  0035  0BF2               	decfsz	??_main,f
   503  0036  2835               	goto	u197
   504  0037  0BF3               	decfsz	??_main+1,f
   505  0038  2835               	goto	u197
   506  0039  283A               	nop2
   507  003A                     l714:
   508                           
   509                           ;main.c: 80:         T1CONbits.TMR1ON = 1;
   510  003A  1283               	bcf	3,5	;RP0=0, select bank0
   511  003B  1303               	bcf	3,6	;RP1=0, select bank0
   512  003C  1410               	bsf	16,0	;volatile
   513  003D                     l53:	
   514                           ;main.c: 81:         while(!RA1);
   515                           
   516  003D  1C85               	btfss	5,1	;volatile
   517  003E  2840               	goto	u21
   518  003F  2841               	goto	u20
   519  0040                     u21:
   520  0040  283D               	goto	l53
   521  0041                     u20:
   522  0041                     l55:
   523                           
   524                           ;main.c: 82:         if(TMR1IF)
   525  0041  1C0C               	btfss	12,0	;volatile
   526  0042  2844               	goto	u31
   527  0043  2845               	goto	u30
   528  0044                     u31:
   529  0044  286E               	goto	l56
   530  0045                     u30:
   531  0045                     l716:
   532                           
   533                           ;main.c: 83:         {;main.c: 84:             PORTCbits.RC2 = 0;
   534  0045  1107               	bcf	7,2	;volatile
   535                           
   536                           ;main.c: 85:             PORTCbits.RC3 = 1;
   537  0046  1587               	bsf	7,3	;volatile
   538                           
   539                           ;main.c: 87:             T1CONbits.TMR1ON = 0;
   540  0047  1010               	bcf	16,0	;volatile
   541                           
   542                           ;main.c: 88:             TMR1IF = 0;
   543  0048  100C               	bcf	12,0	;volatile
   544  0049                     l57:	
   545                           ;main.c: 89:             while(1)
   546                           
   547                           
   548                           ;main.c: 90:             {;main.c: 91:                 if(!RA0)
   549  0049  1805               	btfsc	5,0	;volatile
   550  004A  284C               	goto	u41
   551  004B  284D               	goto	u40
   552  004C                     u41:
   553  004C  2849               	goto	l57
   554  004D                     u40:
   555  004D                     l718:
   556                           
   557                           ;main.c: 92:                 {;main.c: 93:                     _delay((unsigned long)((1
      +                          00)*(4000000UL/4000.0)));
   558  004D  3082               	movlw	130
   559  004E  00F3               	movwf	??_main+1
   560  004F  30DD               	movlw	221
   561  0050  00F2               	movwf	??_main
   562  0051                     u207:
   563  0051  0BF2               	decfsz	??_main,f
   564  0052  2851               	goto	u207
   565  0053  0BF3               	decfsz	??_main+1,f
   566  0054  2851               	goto	u207
   567  0055  2856               	nop2
   568  0056                     l59:	
   569                           ;main.c: 94:                     while(!RA0);
   570                           
   571  0056  1283               	bcf	3,5	;RP0=0, select bank0
   572  0057  1303               	bcf	3,6	;RP1=0, select bank0
   573  0058  1C05               	btfss	5,0	;volatile
   574  0059  285B               	goto	u51
   575  005A  285C               	goto	u50
   576  005B                     u51:
   577  005B  2856               	goto	l59
   578  005C                     u50:
   579  005C                     l61:
   580                           
   581                           ;main.c: 95:                     PORTAbits.RA4 = 0;
   582  005C  1205               	bcf	5,4	;volatile
   583  005D                     l720:
   584                           
   585                           ;main.c: 96:                     _delay((unsigned long)((500)*(4000000UL/4000.0)));
   586  005D  3003               	movlw	3
   587  005E  00F4               	movwf	??_main+2
   588  005F  308A               	movlw	138
   589  0060  00F3               	movwf	??_main+1
   590  0061  3055               	movlw	85
   591  0062  00F2               	movwf	??_main
   592  0063                     u217:
   593  0063  0BF2               	decfsz	??_main,f
   594  0064  2863               	goto	u217
   595  0065  0BF3               	decfsz	??_main+1,f
   596  0066  2863               	goto	u217
   597  0067  0BF4               	decfsz	??_main+2,f
   598  0068  2863               	goto	u217
   599  0069  286A               	nop2
   600  006A                     l722:
   601                           
   602                           ;main.c: 97:                     PORTAbits.RA4 = 1;
   603  006A  1283               	bcf	3,5	;RP0=0, select bank0
   604  006B  1303               	bcf	3,6	;RP1=0, select bank0
   605  006C  1605               	bsf	5,4	;volatile
   606  006D  2849               	goto	l57
   607  006E                     l56:	
   608                           ;main.c: 101:         }
   609                           
   610                           
   611                           ;main.c: 102:         T1CONbits.TMR1ON = 0;
   612  006E  1010               	bcf	16,0	;volatile
   613  006F                     l724:
   614                           
   615                           ;main.c: 103:         TMR1L = 0x00;
   616  006F  018E               	clrf	14	;volatile
   617                           
   618                           ;main.c: 104:         TMR1H = 0x00;
   619  0070  018F               	clrf	15	;volatile
   620  0071                     l726:
   621                           
   622                           ;main.c: 105:         TMR1IF = 0;
   623  0071  100C               	bcf	12,0	;volatile
   624  0072                     l728:
   625                           
   626                           ;main.c: 109:     {;main.c: 111:         _delay((unsigned long)((150)*(4000000UL/4000.0)
      +                          ));
   627  0072  30C3               	movlw	195
   628  0073  00F3               	movwf	??_main+1
   629  0074  30CD               	movlw	205
   630  0075  00F2               	movwf	??_main
   631  0076                     u227:
   632  0076  0BF2               	decfsz	??_main,f
   633  0077  2876               	goto	u227
   634  0078  0BF3               	decfsz	??_main+1,f
   635  0079  2876               	goto	u227
   636  007A                     l730:
   637                           
   638                           ;main.c: 112:         if((!RA0) && (!RA1))
   639  007A  1283               	bcf	3,5	;RP0=0, select bank0
   640  007B  1303               	bcf	3,6	;RP1=0, select bank0
   641  007C  1805               	btfsc	5,0	;volatile
   642  007D  287F               	goto	u61
   643  007E  2880               	goto	u60
   644  007F                     u61:
   645  007F  28A1               	goto	l65
   646  0080                     u60:
   647  0080                     l732:
   648  0080  1885               	btfsc	5,1	;volatile
   649  0081  2883               	goto	u71
   650  0082  2884               	goto	u70
   651  0083                     u71:
   652  0083  28A1               	goto	l65
   653  0084                     u70:
   654  0084                     l734:
   655                           
   656                           ;main.c: 113:         {;main.c: 114:             T1CONbits.TMR1ON = 1;
   657  0084  1410               	bsf	16,0	;volatile
   658  0085                     l66:	
   659                           ;main.c: 115:             while(!(RA0 && RA1));
   660                           
   661  0085  1C05               	btfss	5,0	;volatile
   662  0086  2888               	goto	u81
   663  0087  2889               	goto	u80
   664  0088                     u81:
   665  0088  2885               	goto	l66
   666  0089                     u80:
   667  0089                     l736:
   668  0089  1C85               	btfss	5,1	;volatile
   669  008A  288C               	goto	u91
   670  008B  288D               	goto	u90
   671  008C                     u91:
   672  008C  2885               	goto	l66
   673  008D                     u90:
   674  008D                     l68:
   675                           
   676                           ;main.c: 116:             if(TMR1IF)
   677  008D  1C0C               	btfss	12,0	;volatile
   678  008E  2890               	goto	u101
   679  008F  2891               	goto	u100
   680  0090                     u101:
   681  0090  2899               	goto	l69
   682  0091                     u100:
   683  0091                     l738:
   684                           
   685                           ;main.c: 117:             {;main.c: 118:                 if(RC1)
   686  0091  1C87               	btfss	7,1	;volatile
   687  0092  2894               	goto	u111
   688  0093  2895               	goto	u110
   689  0094                     u111:
   690  0094  2897               	goto	l70
   691  0095                     u110:
   692  0095                     l740:
   693                           
   694                           ;main.c: 119:                 {;main.c: 120:                     PORTCbits.RC1 = 0;
   695  0095  1087               	bcf	7,1	;volatile
   696                           
   697                           ;main.c: 121:                 }
   698  0096  289A               	goto	l72
   699  0097                     l70:	
   700                           ;main.c: 122:                 else
   701                           
   702                           
   703                           ;main.c: 123:                 {;main.c: 124:                     PORTCbits.RC1 = 1;
   704  0097  1487               	bsf	7,1	;volatile
   705  0098  289A               	goto	l72
   706  0099                     l69:	
   707                           ;main.c: 127:             else
   708                           
   709                           
   710                           ;main.c: 128:             {;main.c: 130:                 __nop();
   711  0099  0000               	nop
   712  009A                     l72:	
   713                           ;main.c: 131:             }
   714                           
   715                           
   716                           ;main.c: 132:             T1CONbits.TMR1ON = 0;
   717  009A  1283               	bcf	3,5	;RP0=0, select bank0
   718  009B  1303               	bcf	3,6	;RP1=0, select bank0
   719  009C  1010               	bcf	16,0	;volatile
   720  009D                     l742:
   721                           
   722                           ;main.c: 133:             TMR1L = 0x00;
   723  009D  018E               	clrf	14	;volatile
   724                           
   725                           ;main.c: 134:             TMR1H = 0x00;
   726  009E  018F               	clrf	15	;volatile
   727  009F                     l744:
   728                           
   729                           ;main.c: 135:             TMR1IF = 0;
   730  009F  100C               	bcf	12,0	;volatile
   731                           
   732                           ;main.c: 136:         }
   733  00A0  2908               	goto	l73
   734  00A1                     l65:	
   735                           ;main.c: 137:         else if(!RA0)
   736                           
   737  00A1  1805               	btfsc	5,0	;volatile
   738  00A2  28A4               	goto	u121
   739  00A3  28A5               	goto	u120
   740  00A4                     u121:
   741  00A4  28D5               	goto	l74
   742  00A5                     u120:
   743  00A5                     l746:
   744                           
   745                           ;main.c: 138:         {;main.c: 139:             T1CONbits.TMR1ON = 1;
   746  00A5  1410               	bsf	16,0	;volatile
   747  00A6                     l75:	
   748                           ;main.c: 140:             while(!RA0);
   749                           
   750  00A6  1C05               	btfss	5,0	;volatile
   751  00A7  28A9               	goto	u131
   752  00A8  28AA               	goto	u130
   753  00A9                     u131:
   754  00A9  28A6               	goto	l75
   755  00AA                     u130:
   756  00AA                     l77:
   757                           
   758                           ;main.c: 141:             if(TMR1IF)
   759  00AA  1C0C               	btfss	12,0	;volatile
   760  00AB  28AD               	goto	u141
   761  00AC  28AE               	goto	u140
   762  00AD                     u141:
   763  00AD  28C0               	goto	l78
   764  00AE                     u140:
   765  00AE                     l748:
   766                           
   767                           ;main.c: 142:             {;main.c: 143:                 PORTCbits.RC5 = 0;
   768  00AE  1287               	bcf	7,5	;volatile
   769  00AF                     l750:
   770                           
   771                           ;main.c: 144:                 _delay((unsigned long)((500)*(4000000UL/4000.0)));
   772  00AF  3003               	movlw	3
   773  00B0  00F4               	movwf	??_main+2
   774  00B1  308A               	movlw	138
   775  00B2  00F3               	movwf	??_main+1
   776  00B3  3055               	movlw	85
   777  00B4  00F2               	movwf	??_main
   778  00B5                     u237:
   779  00B5  0BF2               	decfsz	??_main,f
   780  00B6  28B5               	goto	u237
   781  00B7  0BF3               	decfsz	??_main+1,f
   782  00B8  28B5               	goto	u237
   783  00B9  0BF4               	decfsz	??_main+2,f
   784  00BA  28B5               	goto	u237
   785  00BB  28BC               	nop2
   786  00BC                     l752:
   787                           
   788                           ;main.c: 145:                 PORTCbits.RC5 = 1;
   789  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   790  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   791  00BE  1687               	bsf	7,5	;volatile
   792                           
   793                           ;main.c: 146:             }
   794  00BF  28D1               	goto	l758
   795  00C0                     l78:	
   796                           ;main.c: 147:             else
   797                           
   798                           
   799                           ;main.c: 148:             {;main.c: 149:                 PORTAbits.RA4 = 0;
   800  00C0  1205               	bcf	5,4	;volatile
   801  00C1                     l754:
   802                           
   803                           ;main.c: 150:                 _delay((unsigned long)((500)*(4000000UL/4000.0)));
   804  00C1  3003               	movlw	3
   805  00C2  00F4               	movwf	??_main+2
   806  00C3  308A               	movlw	138
   807  00C4  00F3               	movwf	??_main+1
   808  00C5  3055               	movlw	85
   809  00C6  00F2               	movwf	??_main
   810  00C7                     u247:
   811  00C7  0BF2               	decfsz	??_main,f
   812  00C8  28C7               	goto	u247
   813  00C9  0BF3               	decfsz	??_main+1,f
   814  00CA  28C7               	goto	u247
   815  00CB  0BF4               	decfsz	??_main+2,f
   816  00CC  28C7               	goto	u247
   817  00CD  28CE               	nop2
   818  00CE                     l756:
   819                           
   820                           ;main.c: 151:                 PORTAbits.RA4 = 1;
   821  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   822  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   823  00D0  1605               	bsf	5,4	;volatile
   824  00D1                     l758:
   825                           
   826                           ;main.c: 153:             T1CONbits.TMR1ON = 0;
   827  00D1  1010               	bcf	16,0	;volatile
   828  00D2                     l760:
   829                           
   830                           ;main.c: 154:             TMR1L = 0x00;
   831  00D2  018E               	clrf	14	;volatile
   832  00D3                     l762:
   833                           
   834                           ;main.c: 155:             TMR1H = 0x00;
   835  00D3  018F               	clrf	15	;volatile
   836  00D4  289F               	goto	l744
   837  00D5                     l74:	
   838                           ;main.c: 158:         else if(!RA1)
   839                           
   840  00D5  1885               	btfsc	5,1	;volatile
   841  00D6  28D8               	goto	u151
   842  00D7  28D9               	goto	u150
   843  00D8                     u151:
   844  00D8  2907               	goto	l81
   845  00D9                     u150:
   846  00D9                     l766:
   847                           
   848                           ;main.c: 159:         {;main.c: 160:             T1CONbits.TMR1ON = 1;
   849  00D9  1410               	bsf	16,0	;volatile
   850  00DA                     l82:	
   851                           ;main.c: 161:             while(!RA1);
   852                           
   853  00DA  1C85               	btfss	5,1	;volatile
   854  00DB  28DD               	goto	u161
   855  00DC  28DE               	goto	u160
   856  00DD                     u161:
   857  00DD  28DA               	goto	l82
   858  00DE                     u160:
   859  00DE                     l84:
   860                           
   861                           ;main.c: 162:             if(TMR1IF)
   862  00DE  1C0C               	btfss	12,0	;volatile
   863  00DF  28E1               	goto	u171
   864  00E0  28E2               	goto	u170
   865  00E1                     u171:
   866  00E1  28F4               	goto	l85
   867  00E2                     u170:
   868  00E2                     l768:
   869                           
   870                           ;main.c: 163:             {;main.c: 164:                 PORTCbits.RC0 = 0;
   871  00E2  1007               	bcf	7,0	;volatile
   872  00E3                     l770:
   873                           
   874                           ;main.c: 165:                 _delay((unsigned long)((500)*(4000000UL/4000.0)));
   875  00E3  3003               	movlw	3
   876  00E4  00F4               	movwf	??_main+2
   877  00E5  308A               	movlw	138
   878  00E6  00F3               	movwf	??_main+1
   879  00E7  3055               	movlw	85
   880  00E8  00F2               	movwf	??_main
   881  00E9                     u257:
   882  00E9  0BF2               	decfsz	??_main,f
   883  00EA  28E9               	goto	u257
   884  00EB  0BF3               	decfsz	??_main+1,f
   885  00EC  28E9               	goto	u257
   886  00ED  0BF4               	decfsz	??_main+2,f
   887  00EE  28E9               	goto	u257
   888  00EF  28F0               	nop2
   889  00F0                     l772:
   890                           
   891                           ;main.c: 166:                 PORTCbits.RC0 = 1;
   892  00F0  1283               	bcf	3,5	;RP0=0, select bank0
   893  00F1  1303               	bcf	3,6	;RP1=0, select bank0
   894  00F2  1407               	bsf	7,0	;volatile
   895                           
   896                           ;main.c: 167:             }
   897  00F3  2905               	goto	l778
   898  00F4                     l85:	
   899                           ;main.c: 168:             else
   900                           
   901                           
   902                           ;main.c: 169:             {;main.c: 170:                 PORTAbits.RA5 = 0;
   903  00F4  1285               	bcf	5,5	;volatile
   904  00F5                     l774:
   905                           
   906                           ;main.c: 171:                 _delay((unsigned long)((500)*(4000000UL/4000.0)));
   907  00F5  3003               	movlw	3
   908  00F6  00F4               	movwf	??_main+2
   909  00F7  308A               	movlw	138
   910  00F8  00F3               	movwf	??_main+1
   911  00F9  3055               	movlw	85
   912  00FA  00F2               	movwf	??_main
   913  00FB                     u267:
   914  00FB  0BF2               	decfsz	??_main,f
   915  00FC  28FB               	goto	u267
   916  00FD  0BF3               	decfsz	??_main+1,f
   917  00FE  28FB               	goto	u267
   918  00FF  0BF4               	decfsz	??_main+2,f
   919  0100  28FB               	goto	u267
   920  0101  2902               	nop2
   921  0102                     l776:
   922                           
   923                           ;main.c: 172:                 PORTAbits.RA5 = 1;
   924  0102  1283               	bcf	3,5	;RP0=0, select bank0
   925  0103  1303               	bcf	3,6	;RP1=0, select bank0
   926  0104  1685               	bsf	5,5	;volatile
   927  0105                     l778:
   928                           
   929                           ;main.c: 174:             T1CONbits.TMR1ON = 0;
   930  0105  1010               	bcf	16,0	;volatile
   931  0106  28D2               	goto	l760
   932  0107                     l81:	
   933                           ;main.c: 179:         else
   934                           
   935                           
   936                           ;main.c: 180:         {;main.c: 181:             __nop();
   937  0107  0000               	nop
   938  0108                     l73:
   939                           
   940                           ;main.c: 190:         if(RA2)
   941  0108  1283               	bcf	3,5	;RP0=0, select bank0
   942  0109  1303               	bcf	3,6	;RP1=0, select bank0
   943  010A  1D05               	btfss	5,2	;volatile
   944  010B  290D               	goto	u181
   945  010C  290E               	goto	u180
   946  010D                     u181:
   947  010D  2910               	goto	l88
   948  010E                     u180:
   949  010E                     l786:
   950                           
   951                           ;main.c: 191:         {;main.c: 192:             PORTCbits.RC4 = 1;
   952  010E  1607               	bsf	7,4	;volatile
   953                           
   954                           ;main.c: 193:         }
   955  010F  2872               	goto	l728
   956  0110                     l88:	
   957                           ;main.c: 194:         else
   958                           
   959                           
   960                           ;main.c: 195:         {;main.c: 196:             PORTCbits.RC4 = 0;
   961  0110  1207               	bcf	7,4	;volatile
   962  0111  2872               	goto	l728
   963  0112  118A  280B         	ljmp	start
   964  0114                     __end_of_main:
   965                           
   966                           	psect	text1
   967  0114                     __ptext1:	
   968 ;; *************** function _isr *****************
   969 ;; Defined at:
   970 ;;		line 23 in file "interrupts.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		None
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   984 ;;      Params:         0       0       0       0
   985 ;;      Locals:         0       0       0       0
   986 ;;      Temps:          2       0       0       0
   987 ;;      Totals:         2       0       0       0
   988 ;;Total ram usage:        2 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		Interrupt level 1
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _isr
   999  0114                     _isr:
  1000  0114                     i1l5:
  1001  0114  0871               	movf	??_isr+1,w
  1002  0115  008A               	movwf	10
  1003  0116  0E70               	swapf	??_isr,w
  1004  0117  0083               	movwf	3
  1005  0118  0EFE               	swapf	btemp,f
  1006  0119  0E7E               	swapf	btemp,w
  1007  011A  0009               	retfie
  1008  011B                     __end_of_isr:
  1009  007E                     btemp	set	126	;btemp
  1010  007E                     wtemp0	set	126
  1011                           
  1012                           	psect	intentry
  1013  0004                     __pintentry:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _isr: []
  1016                           
  1017  0004                     interrupt_function:
  1018  007E                     saved_w	set	btemp
  1019  0004  00FE               	movwf	btemp
  1020  0005  0E03               	swapf	3,w
  1021  0006  00F0               	movwf	??_isr
  1022  0007  080A               	movf	10,w
  1023  0008  00F1               	movwf	??_isr+1
  1024  0009  118A  2914         	ljmp	_isr
  1025                           
  1026                           	psect	config
  1027                           
  1028                           ;Config register CONFIG @ 0x2007
  1029                           ;	Oscillator Selection bits
  1030                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  1031                           ;	Watchdog Timer Enable bit
  1032                           ;	WDTE = OFF, WDT disabled
  1033                           ;	Power-up Timer Enable bit
  1034                           ;	PWRTE = OFF, PWRT disabled
  1035                           ;	MCLR Pin Function Select bit
  1036                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1037                           ;	Code Protection bit
  1038                           ;	CP = OFF, Program memory code protection is disabled
  1039                           ;	Data Code Protection bit
  1040                           ;	CPD = OFF, Data memory code protection is disabled
  1041                           ;	Brown Out Detect
  1042                           ;	BOREN = OFF, BOR disabled
  1043                           ;	Internal External Switchover bit
  1044                           ;	IESO = OFF, Internal External Switchover mode is disabled
  1045                           ;	Fail-Safe Clock Monitor Enabled bit
  1046                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1047  2007                     	org	8199
  1048  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 12 01:49:41 2020

                     l61 005C                       l53 003D                       l70 0097  
                     l55 0041                       l72 009A                       l56 006E  
                     l81 0107                       l73 0108                       l65 00A1  
                     l57 0049                       l82 00DA                       l74 00D5  
                     l66 0085                       l75 00A6                       l59 0056  
                     l84 00DE                       l68 008D                       l85 00F4  
                     l77 00AA                       l69 0099                       l78 00C0  
                     l88 0110                       u10 0031                       u11 0030  
                     u20 0041                       u21 0040                       u30 0045  
                     u31 0044                       u40 004D                       u41 004C  
                     u50 005C                       u51 005B                       u60 0080  
                     u61 007F                       u70 0084                       u71 0083  
                     u80 0089                       u81 0088                       u90 008D  
                     u91 008C                      l700 0022                      l710 002D  
                    l702 0025                      l720 005D                      l712 0031  
                    l704 0029                      l730 007A                      l722 006A  
                    l714 003A                      l706 002A                      l740 0095  
                    l732 0080                      l724 006F                      l716 0045  
                    l708 002B                      l750 00AF                      l742 009D  
                    l734 0084                      l726 0071                      l718 004D  
                    l760 00D2                      l752 00BC                      l744 009F  
                    l736 0089                      l728 0072                      l770 00E3  
                    l762 00D3                      l754 00C1                      l746 00A5  
                    l738 0091                      l690 0010                      l772 00F0  
                    l756 00CE                      l748 00AE                      l692 0013  
                    l774 00F5                      l766 00D9                      l758 00D1  
                    l694 0017                      l776 0102                      l768 00E2  
                    l696 001B                      l786 010E                      l778 0105  
                    l698 001F                      _RA0 0028                      _RA1 0029  
                    _RA2 002A                      _RC1 0039                      u100 0091  
                    u101 0090                      u110 0095                      u111 0094  
                    u120 00A5                      u121 00A4                      u130 00AA  
                    u131 00A9                      u140 00AE                      u141 00AD  
                    u150 00D9                      u151 00D8                      u207 0051  
                    u160 00DE                      u161 00DD                      u217 0063  
                    u170 00E2                      u171 00E1                      u227 0076  
                    u180 010E                      u181 010D                      u237 00B5  
                    u247 00C7                      u257 00E9                      u267 00FB  
                    u197 0035                      i1l5 0114                      _isr 0114  
                   ?_isr 0070                     _WPUA 0095                     _main 0010  
                   btemp 007E                     start 000B                    ??_isr 0070  
                  ?_main 0070                    _ANSEL 0091                    _T1CON 0010  
                  _TMR1H 000F                    _TMR1L 000E                    _PORTA 0005  
                  _PORTC 0007                    _TRISA 0085                    _TRISC 0087  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000D             __end_of_main 0114                   ??_main 0072  
                 _CMCON0 0019                   _TMR1IF 0060                   saved_w 007E  
__end_of__initialization 000D           __pcstackCOMMON 0070           _OPTION_REGbits 0081  
             __pmaintext 0010               __pintentry 0004                  __ptext1 0114  
              _T1CONbits 0010             __size_of_isr 0007     end_of_initialization 000D  
              _PORTAbits 0005                _PORTCbits 0007      start_initialization 000D  
            __end_of_isr 011B                ___latbits 0001        interrupt_function 0004  
          __size_of_main 0104                 intlevel1 0000  
