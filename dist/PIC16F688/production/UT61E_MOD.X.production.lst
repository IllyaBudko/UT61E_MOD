

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Oct 12 00:56:53 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F688
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.30
    13                           ; Generated 26/08/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F688 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0007                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0013                     	;# 
    64  0014                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001E                     	;# 
    72  001F                     	;# 
    73  0081                     	;# 
    74  0085                     	;# 
    75  0087                     	;# 
    76  008C                     	;# 
    77  008E                     	;# 
    78  008F                     	;# 
    79  0090                     	;# 
    80  0091                     	;# 
    81  0095                     	;# 
    82  0095                     	;# 
    83  0096                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0007                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0087                     	;# 
   124  008C                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0095                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0007                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0087                     	;# 
   172  008C                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0095                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0007                     	;# 
   198  000A                     	;# 
   199  000B                     	;# 
   200  000C                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001E                     	;# 
   216  001F                     	;# 
   217  0081                     	;# 
   218  0085                     	;# 
   219  0087                     	;# 
   220  008C                     	;# 
   221  008E                     	;# 
   222  008F                     	;# 
   223  0090                     	;# 
   224  0091                     	;# 
   225  0095                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0096                     	;# 
   229  0097                     	;# 
   230  0098                     	;# 
   231  0099                     	;# 
   232  009A                     	;# 
   233  009A                     	;# 
   234  009B                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0007                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0087                     	;# 
   268  008C                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0095                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0007                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001E                     	;# 
   312  001F                     	;# 
   313  0081                     	;# 
   314  0085                     	;# 
   315  0087                     	;# 
   316  008C                     	;# 
   317  008E                     	;# 
   318  008F                     	;# 
   319  0090                     	;# 
   320  0091                     	;# 
   321  0095                     	;# 
   322  0095                     	;# 
   323  0096                     	;# 
   324  0096                     	;# 
   325  0097                     	;# 
   326  0098                     	;# 
   327  0099                     	;# 
   328  009A                     	;# 
   329  009A                     	;# 
   330  009B                     	;# 
   331  009C                     	;# 
   332  009D                     	;# 
   333  009E                     	;# 
   334  009F                     	;# 
   335  0005                     _PORTAbits	set	5
   336  0007                     _PORTCbits	set	7
   337  0010                     _T1CONbits	set	16
   338  0010                     _T1CON	set	16
   339  000F                     _TMR1H	set	15
   340  000E                     _TMR1L	set	14
   341  0007                     _PORTC	set	7
   342  0005                     _PORTA	set	5
   343  0019                     _CMCON0	set	25
   344  0028                     _RA0	set	40
   345  0060                     _TMR1IF	set	96
   346  0029                     _RA1	set	41
   347  0087                     _TRISC	set	135
   348  0095                     _WPUA	set	149
   349  0081                     _OPTION_REGbits	set	129
   350  0085                     _TRISA	set	133
   351  0091                     _ANSEL	set	145
   352                           
   353                           	psect	cinit
   354  000D                     start_initialization:	
   355                           ; #config settings
   356                           
   357  000D                     __initialization:
   358  000D                     end_of_initialization:	
   359                           ;End of C runtime variable initialization code
   360                           
   361  000D                     __end_of__initialization:
   362  000D  0183               	clrf	3
   363  000E  118A  2810         	ljmp	_main	;jump to C main() function
   364                           
   365                           	psect	cstackCOMMON
   366  0070                     __pcstackCOMMON:
   367  0070                     ?_isr:
   368  0070                     ??_isr:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 1 bytes @ 0x0
   376  0070                     	ds	2
   377  0072                     ??_main:
   378                           
   379                           ; 1 bytes @ 0x2
   380  0072                     	ds	3
   381                           
   382                           	psect	maintext
   383  0010                     __pmaintext:	
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 49 in file "main.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2
   398 ;; Tracked objects:
   399 ;;		On entry : B00/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   403 ;;      Params:         0       0       0       0
   404 ;;      Locals:         0       0       0       0
   405 ;;      Temps:          3       0       0       0
   406 ;;      Totals:         3       0       0       0
   407 ;;Total ram usage:        3 bytes
   408 ;; Hardware stack levels required when called:    1
   409 ;; This function calls:
   410 ;;		Nothing
   411 ;; This function is called by:
   412 ;;		Startup code after reset
   413 ;; This function uses a non-reentrant model
   414 ;;
   415                           
   416                           
   417                           ;psect for function _main
   418  0010                     _main:
   419  0010                     l662:	
   420                           ;incstack = 0
   421                           ; Regs used in _main: [wreg+status,2]
   422                           
   423                           
   424                           ;main.c: 51:     ANSEL = 0x00;
   425  0010  1683               	bsf	3,5	;RP0=1, select bank1
   426  0011  1303               	bcf	3,6	;RP1=0, select bank1
   427  0012  0191               	clrf	17	;volatile
   428  0013                     l664:
   429                           
   430                           ;main.c: 52:     CMCON0 = 0x07;
   431  0013  3007               	movlw	7
   432  0014  1283               	bcf	3,5	;RP0=0, select bank0
   433  0015  1303               	bcf	3,6	;RP1=0, select bank0
   434  0016  0099               	movwf	25	;volatile
   435  0017                     l666:
   436                           
   437                           ;main.c: 55:     TRISA = 0x07;
   438  0017  3007               	movlw	7
   439  0018  1683               	bsf	3,5	;RP0=1, select bank1
   440  0019  1303               	bcf	3,6	;RP1=0, select bank1
   441  001A  0085               	movwf	5	;volatile
   442  001B                     l668:
   443                           
   444                           ;main.c: 56:     PORTA = 0x30;
   445  001B  3030               	movlw	48
   446  001C  1283               	bcf	3,5	;RP0=0, select bank0
   447  001D  1303               	bcf	3,6	;RP1=0, select bank0
   448  001E  0085               	movwf	5	;volatile
   449  001F                     l670:
   450                           
   451                           ;main.c: 57:     OPTION_REGbits.nRAPU = 0;
   452  001F  1683               	bsf	3,5	;RP0=1, select bank1
   453  0020  1303               	bcf	3,6	;RP1=0, select bank1
   454  0021  1381               	bcf	1,7	;volatile
   455  0022                     l672:
   456                           
   457                           ;main.c: 58:     WPUA = 0x07;
   458  0022  3007               	movlw	7
   459  0023  0095               	movwf	21	;volatile
   460                           
   461                           ;main.c: 61:     TRISC = 0x00;
   462  0024  0187               	clrf	7	;volatile
   463  0025                     l674:
   464                           
   465                           ;main.c: 62:     PORTC = 0x67;
   466  0025  3067               	movlw	103
   467  0026  1283               	bcf	3,5	;RP0=0, select bank0
   468  0027  1303               	bcf	3,6	;RP1=0, select bank0
   469  0028  0087               	movwf	7	;volatile
   470  0029                     l676:
   471                           
   472                           ;main.c: 65:     TMR1L = 0x00;
   473  0029  018E               	clrf	14	;volatile
   474  002A                     l678:
   475                           
   476                           ;main.c: 66:     TMR1H = 0x00;
   477  002A  018F               	clrf	15	;volatile
   478  002B                     l680:
   479                           
   480                           ;main.c: 67:     T1CON = 0x30;
   481  002B  3030               	movlw	48
   482  002C  0090               	movwf	16	;volatile
   483  002D                     l46:	
   484                           ;main.c: 72:     while(RA1);
   485                           
   486  002D  1885               	btfsc	5,1	;volatile
   487  002E  2830               	goto	u11
   488  002F  2831               	goto	u10
   489  0030                     u11:
   490  0030  282D               	goto	l46
   491  0031                     u10:
   492  0031                     l48:
   493                           
   494                           ;main.c: 76:     if(!RA1)
   495  0031  1885               	btfsc	5,1	;volatile
   496  0032  2834               	goto	u21
   497  0033  2835               	goto	u20
   498  0034                     u21:
   499  0034  2872               	goto	l698
   500  0035                     u20:
   501  0035                     l682:
   502                           
   503                           ;main.c: 77:     {;main.c: 78:         _delay((unsigned long)((100)*(4000000UL/4000.0)))
      +                          ;
   504  0035  3082               	movlw	130
   505  0036  00F3               	movwf	??_main+1
   506  0037  30DD               	movlw	221
   507  0038  00F2               	movwf	??_main
   508  0039                     u77:
   509  0039  0BF2               	decfsz	??_main,f
   510  003A  2839               	goto	u77
   511  003B  0BF3               	decfsz	??_main+1,f
   512  003C  2839               	goto	u77
   513  003D  283E               	nop2
   514  003E                     l684:
   515                           
   516                           ;main.c: 79:         T1CONbits.TMR1ON = 1;
   517  003E  1283               	bcf	3,5	;RP0=0, select bank0
   518  003F  1303               	bcf	3,6	;RP1=0, select bank0
   519  0040  1410               	bsf	16,0	;volatile
   520  0041                     l50:	
   521                           ;main.c: 80:         while(!RA1);
   522                           
   523  0041  1C85               	btfss	5,1	;volatile
   524  0042  2844               	goto	u31
   525  0043  2845               	goto	u30
   526  0044                     u31:
   527  0044  2841               	goto	l50
   528  0045                     u30:
   529  0045                     l52:
   530                           
   531                           ;main.c: 81:         if(TMR1IF)
   532  0045  1C0C               	btfss	12,0	;volatile
   533  0046  2848               	goto	u41
   534  0047  2849               	goto	u40
   535  0048                     u41:
   536  0048  286E               	goto	l53
   537  0049                     u40:
   538  0049                     l686:
   539                           
   540                           ;main.c: 82:         {;main.c: 83:             PORTCbits.RC2 = 0;
   541  0049  1107               	bcf	7,2	;volatile
   542                           
   543                           ;main.c: 84:             PORTCbits.RC3 = 1;
   544  004A  1587               	bsf	7,3	;volatile
   545                           
   546                           ;main.c: 86:             T1CONbits.TMR1ON = 0;
   547  004B  1010               	bcf	16,0	;volatile
   548                           
   549                           ;main.c: 87:             TMR1IF = 0;
   550  004C  100C               	bcf	12,0	;volatile
   551  004D                     l54:	
   552                           ;main.c: 88:             while(1)
   553                           
   554                           
   555                           ;main.c: 89:             {;main.c: 90:                 if(!RA0)
   556  004D  1805               	btfsc	5,0	;volatile
   557  004E  2850               	goto	u51
   558  004F  2851               	goto	u50
   559  0050                     u51:
   560  0050  284D               	goto	l54
   561  0051                     u50:
   562  0051                     l688:
   563                           
   564                           ;main.c: 91:                 {;main.c: 92:                     _delay((unsigned long)((1
      +                          00)*(4000000UL/4000.0)));
   565  0051  3082               	movlw	130
   566  0052  00F3               	movwf	??_main+1
   567  0053  30DD               	movlw	221
   568  0054  00F2               	movwf	??_main
   569  0055                     u87:
   570  0055  0BF2               	decfsz	??_main,f
   571  0056  2855               	goto	u87
   572  0057  0BF3               	decfsz	??_main+1,f
   573  0058  2855               	goto	u87
   574  0059  285A               	nop2
   575  005A                     l56:	
   576                           ;main.c: 93:                     while(!RA0);
   577                           
   578  005A  1283               	bcf	3,5	;RP0=0, select bank0
   579  005B  1303               	bcf	3,6	;RP1=0, select bank0
   580  005C  1C05               	btfss	5,0	;volatile
   581  005D  285F               	goto	u61
   582  005E  2860               	goto	u60
   583  005F                     u61:
   584  005F  285A               	goto	l56
   585  0060                     u60:
   586  0060                     l58:
   587                           
   588                           ;main.c: 94:                     PORTAbits.RA4 = 0;
   589  0060  1205               	bcf	5,4	;volatile
   590  0061                     l690:
   591                           
   592                           ;main.c: 95:                     _delay((unsigned long)((50)*(4000000UL/4000.0)));
   593  0061  3041               	movlw	65
   594  0062  00F3               	movwf	??_main+1
   595  0063  30EE               	movlw	238
   596  0064  00F2               	movwf	??_main
   597  0065                     u97:
   598  0065  0BF2               	decfsz	??_main,f
   599  0066  2865               	goto	u97
   600  0067  0BF3               	decfsz	??_main+1,f
   601  0068  2865               	goto	u97
   602  0069  0000               	nop
   603  006A                     l692:
   604                           
   605                           ;main.c: 96:                     PORTAbits.RA4 = 1;
   606  006A  1283               	bcf	3,5	;RP0=0, select bank0
   607  006B  1303               	bcf	3,6	;RP1=0, select bank0
   608  006C  1605               	bsf	5,4	;volatile
   609  006D  284D               	goto	l54
   610  006E                     l53:	
   611                           ;main.c: 100:         }
   612                           
   613                           
   614                           ;main.c: 101:         T1CONbits.TMR1ON = 0;
   615  006E  1010               	bcf	16,0	;volatile
   616  006F                     l694:
   617                           
   618                           ;main.c: 102:         TMR1L = 0x00;
   619  006F  018E               	clrf	14	;volatile
   620                           
   621                           ;main.c: 103:         TMR1H = 0x00;
   622  0070  018F               	clrf	15	;volatile
   623  0071                     l696:
   624                           
   625                           ;main.c: 104:         TMR1IF = 0;
   626  0071  100C               	bcf	12,0	;volatile
   627  0072                     l698:
   628                           
   629                           ;main.c: 108:     {;main.c: 109:         PORTC = 0xFF;
   630  0072  30FF               	movlw	255
   631  0073  1283               	bcf	3,5	;RP0=0, select bank0
   632  0074  1303               	bcf	3,6	;RP1=0, select bank0
   633  0075  0087               	movwf	7	;volatile
   634  0076                     l700:
   635                           
   636                           ;main.c: 110:         _delay((unsigned long)((500)*(4000000UL/4000.0)));
   637  0076  3003               	movlw	3
   638  0077  00F4               	movwf	??_main+2
   639  0078  308A               	movlw	138
   640  0079  00F3               	movwf	??_main+1
   641  007A  3055               	movlw	85
   642  007B  00F2               	movwf	??_main
   643  007C                     u107:
   644  007C  0BF2               	decfsz	??_main,f
   645  007D  287C               	goto	u107
   646  007E  0BF3               	decfsz	??_main+1,f
   647  007F  287C               	goto	u107
   648  0080  0BF4               	decfsz	??_main+2,f
   649  0081  287C               	goto	u107
   650  0082  2883               	nop2
   651                           
   652                           ;main.c: 111:         PORTC = 0x00;
   653  0083  1283               	bcf	3,5	;RP0=0, select bank0
   654  0084  1303               	bcf	3,6	;RP1=0, select bank0
   655  0085  0187               	clrf	7	;volatile
   656  0086                     l702:
   657                           
   658                           ;main.c: 112:         _delay((unsigned long)((500)*(4000000UL/4000.0)));
   659  0086  3003               	movlw	3
   660  0087  00F4               	movwf	??_main+2
   661  0088  308A               	movlw	138
   662  0089  00F3               	movwf	??_main+1
   663  008A  3055               	movlw	85
   664  008B  00F2               	movwf	??_main
   665  008C                     u117:
   666  008C  0BF2               	decfsz	??_main,f
   667  008D  288C               	goto	u117
   668  008E  0BF3               	decfsz	??_main+1,f
   669  008F  288C               	goto	u117
   670  0090  0BF4               	decfsz	??_main+2,f
   671  0091  288C               	goto	u117
   672  0092  2893               	nop2
   673  0093  2872               	goto	l698
   674  0094  118A  280B         	ljmp	start
   675  0096                     __end_of_main:
   676                           
   677                           	psect	text1
   678  0096                     __ptext1:	
   679 ;; *************** function _isr *****************
   680 ;; Defined at:
   681 ;;		line 23 in file "interrupts.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		None
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   695 ;;      Params:         0       0       0       0
   696 ;;      Locals:         0       0       0       0
   697 ;;      Temps:          2       0       0       0
   698 ;;      Totals:         2       0       0       0
   699 ;;Total ram usage:        2 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		Interrupt level 1
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           
   709                           ;psect for function _isr
   710  0096                     _isr:
   711  0096                     i1l5:
   712  0096  0871               	movf	??_isr+1,w
   713  0097  008A               	movwf	10
   714  0098  0E70               	swapf	??_isr,w
   715  0099  0083               	movwf	3
   716  009A  0EFE               	swapf	btemp,f
   717  009B  0E7E               	swapf	btemp,w
   718  009C  0009               	retfie
   719  009D                     __end_of_isr:
   720  007E                     btemp	set	126	;btemp
   721  007E                     wtemp0	set	126
   722                           
   723                           	psect	intentry
   724  0004                     __pintentry:	
   725                           ;incstack = 0
   726                           ; Regs used in _isr: []
   727                           
   728  0004                     interrupt_function:
   729  007E                     saved_w	set	btemp
   730  0004  00FE               	movwf	btemp
   731  0005  0E03               	swapf	3,w
   732  0006  00F0               	movwf	??_isr
   733  0007  080A               	movf	10,w
   734  0008  00F1               	movwf	??_isr+1
   735  0009  118A  2896         	ljmp	_isr
   736                           
   737                           	psect	config
   738                           
   739                           ;Config register CONFIG @ 0x2007
   740                           ;	Oscillator Selection bits
   741                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
   742                           ;	Watchdog Timer Enable bit
   743                           ;	WDTE = OFF, WDT disabled
   744                           ;	Power-up Timer Enable bit
   745                           ;	PWRTE = OFF, PWRT disabled
   746                           ;	MCLR Pin Function Select bit
   747                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   748                           ;	Code Protection bit
   749                           ;	CP = OFF, Program memory code protection is disabled
   750                           ;	Data Code Protection bit
   751                           ;	CPD = OFF, Data memory code protection is disabled
   752                           ;	Brown Out Detect
   753                           ;	BOREN = OFF, BOR disabled
   754                           ;	Internal External Switchover bit
   755                           ;	IESO = OFF, Internal External Switchover mode is disabled
   756                           ;	Fail-Safe Clock Monitor Enabled bit
   757                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   758  2007                     	org	8199
   759  2007  30D4               	dw	12500

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Oct 12 00:56:53 2020

                     l50 0041                       l52 0045                       l53 006E  
                     l54 004D                       l46 002D                       l56 005A  
                     l48 0031                       l58 0060                       u10 0031  
                     u11 0030                       u20 0035                       u21 0034  
                     u30 0045                       u31 0044                       u40 0049  
                     u41 0048                       u50 0051                       u51 0050  
                     u60 0060                       u61 005F                       u77 0039  
                     u87 0055                       u97 0065                      l700 0076  
                    l702 0086                      l670 001F                      l662 0010  
                    l680 002B                      l672 0022                      l664 0013  
                    l690 0061                      l682 0035                      l674 0025  
                    l666 0017                      l692 006A                      l684 003E  
                    l676 0029                      l668 001B                      l694 006F  
                    l686 0049                      l678 002A                      l696 0071  
                    l688 0051                      l698 0072                      _RA0 0028  
                    _RA1 0029                      u107 007C                      u117 008C  
                    i1l5 0096                      _isr 0096                     ?_isr 0070  
                   _WPUA 0095                     _main 0010                     btemp 007E  
                   start 000B                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0091                    _T1CON 0010                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTA 0005                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0096                   ??_main 0072                   _CMCON0 0019  
                 _TMR1IF 0060                   saved_w 007E  __end_of__initialization 000D  
         __pcstackCOMMON 0070           _OPTION_REGbits 0081               __pmaintext 0010  
             __pintentry 0004                  __ptext1 0096                _T1CONbits 0010  
           __size_of_isr 0007     end_of_initialization 000D                _PORTAbits 0005  
              _PORTCbits 0007      start_initialization 000D              __end_of_isr 009D  
              ___latbits 0001        interrupt_function 0004            __size_of_main 0086  
               intlevel1 0000  
